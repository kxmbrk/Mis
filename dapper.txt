@{
    ViewBag.Title = "SWR-Octane";
    ViewBag.UseModernJquery = true;
    ViewBag.UseModernBootstrap = true;
}

@section headscripts {
    @System.Web.Optimization.Scripts.Render("~/bundles/swr-octane-master/js")
}

<br />

<h2>View All SWRs</h2>

<p>
    <input type="button" class="btn btn-outline-primary " value="Create New SWR" onclick="location.href='@Url.Action("CreateNewSwr", "OctaneBuilder")'" />
</p>

<style>
    html, body {
        font-size: 11px;
    }

    .ui-multiselect-header a:hover {
        text-decoration: none;
    }

    .ui-multiselect-close {
        margin-right: 3px;
    }

    #gbox_list.ui-jqgrid-jquery-ui {
        width: 99%;
    }

    .center {
        text-align: center;
    }

    a.swr-id-link {
        text-decoration: none;
        color: #d32525;
    }
</style>


<table id="list"></table>

<br />

<table>
    <tbody>
        <tr>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/comp.gif")" alt="Complete">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/new.png")" alt="Lot TBD">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/run.png")" alt="Run">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/wait.png")" alt="Que">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/hold.png")" alt="Hold">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/check.png")" alt="Hold Dispositioned">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/down.png")" alt="Down">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/hot.png")" alt="Hot">
            </td>
            <td style="text-align: center;">
                <span id="ContentPlaceHolder1_hhcValue" style="color:White;background-color:Red;font-weight:bold;">HC</span>
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/info_g.png")" alt="Inventory">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/Warning.png")" alt="Off-Flow" width="16" height="16">
            </td>
            <td style="text-align: center;">
                <img width='16' height='16' src="@Url.Content("../images/remove.gif")" alt="Terminated">
            </td>
        </tr>
        <tr>
            <td style="text-align: center;">Complete</td>
            <td style="text-align: center;">Lot TBD</td>
            <td style="text-align: center;">Run</td>
            <td style="text-align: center;">Que</td>
            <td style="text-align: center;">Hold</td>
            <td style="text-align: center;">Dispositioned</td>
            <td style="text-align: center;">Down</td>
            <td style="text-align: center;">Hot</td>
            <td style="text-align: center;">HHC</td>
            <td style="text-align: center;">Inventory</td>
            <td style="text-align: center;">Off Flow</td>
            <td style="text-align: center;">Terminated</td>
        </tr>
    </tbody>
</table>
<script type="text/javascript">

    var distinctDataColumns = {};

    function getDistinctColumnValues(columnName, callback) {
        $.ajax({
            url: '@Url.Content("~/OctaneMaster/GetDistinctColumnValues?columnName=")' + columnName,
            type: 'GET',
            success: function (data) {
                distinctDataColumns[columnName] = data;
                if (callback) callback();
            },
        });
    }

    var dataInitMultiselect = function (elem, searchOptions) {
        var $grid = $(this);
        setTimeout(function () {
            var $elem = $(elem),
                id = elem.id,
                inToolbar = searchOptions.mode === "filter",
                options = {
                    selectedList: 2,
                    height: "auto",
                    checkAllText: "all",
                    uncheckAllText: "no",
                    noneSelectedText: "Any",
                    open: function () {
                        var $menu = $(".ui-multiselect-menu:visible");
                        $menu.width("auto");
                        var height = $menu.find(">ul>li").first().outerHeight();
                        $menu.find(">ul").css("maxHeight", 5 * Math.max(height, 12));
                        return;
                    }
                },
                $options = $elem.find("option");
            if ($options.length > 0 && $options[0].selected) {
                $options[0].selected = false; // unselect the first selected option

            }
            if (inToolbar) {
                options.minWidth = "auto";
            }
            $grid.triggerHandler("jqGridRefreshFilterValues");
            $elem.multiselect(options);
            // replace icons ui-icon-check, ui-icon-closethick, ui-icon-circle-close
            // and ui-icon-triangle-1-s to font awesome icons
            var $header = $elem.data("echMultiselect").header;
            $header.find("span.ui-icon.ui-icon-check")
                .removeClass("ui-icon ui-icon-check")
                .addClass("fa fa-fw fa-check");
            $header.find("span.ui-icon.ui-icon-closethick")
                .removeClass("ui-icon ui-icon-closethick")
                .addClass("fa fa-fw fa-times");
            $header.find("span.ui-icon.ui-icon-circle-close")
                .removeClass("ui-icon ui-icon-circle-close")
                .addClass("fa fa-times-circle");
            $elem.data("echMultiselect")
                .button
                .find("span.ui-icon.ui-icon-triangle-1-s")
                .removeClass("ui-icon ui-icon-triangle-1-s")
                .addClass("fa fa-caret-down")
                .css({
                    float: "right",
                    marginRight: "5px"
                });

            $elem.siblings("button.ui-multiselect").css({
                width: "100%",
                margin: "1px 0",
                paddingTop: ".3em",
                paddingBottom: ".3em"
            });
        }, 50);
    },

    grid = $("#list"),
    getUniqueNames = function (columnName) {
        var texts = distinctDataColumns[columnName], uniqueTexts = [],
            textsLength = texts.length, text, textsMap = {}, i;;
        if (!texts) return [];

        for (i = 0; i < textsLength; i++) {
            text = texts[i];
            var html = $(text);
            var value = html.find('.value');
            if (value && value.length > 0) {
                text = value.html();
            }

            if (text !== undefined && textsMap[text] === undefined && text) {
                // to test whether the texts is unique we place it in the map.
                textsMap[text] = true;
                uniqueTexts.push(text);
            }
        }
        return uniqueTexts;
    },
    buildSearchSelect = function (uniqueNames) {
        var values = ":All";
        $.each(uniqueNames, function () {
            values += ";" + this + ":" + this;
        });
        return values;
    },
    setSearchSelect = function (columnName) {
        grid.jqGrid('setColProp', columnName,
            {
                stype: 'select',
                searchoptions: {
                    value: buildSearchSelect(getUniqueNames(columnName)),
                    sopt: ['eq']
                }
            }
        );
    };

    swrIdLinkFormatter = function (cellValue, options, rowObject) {
        if (rowObject.SwrStatus == "Pending") {
            return "<div class='center'><a class='swr-id-link' href='@Url.Content("~/OctaneBuilder/Builder?swrId=")" + cellValue + "' target='self'>" + cellValue + "</a></div>";
        }
        else {
            return "<div class='center'><a class='swr-id-link' href='@Url.Content("../TXMES/SWRBuilder/SWR_Approval.aspx?swr=")" + cellValue + "' target='self'>" + cellValue + "</a></div>";
        }
    };

    routeLinkFormatter = function (cellValue, options, rowObject) {
        return "<div class='center'><a href='@Url.Content("../TXMES/SWRBuilder/FlowViewer.aspx?lot=")" + rowObject.Lot
            + "&product=" + rowObject.Product
            + "&swrNum=" + rowObject.SwrId
            + "' target='self'><img src=\"@Url.Content("../images/link.png")\" /></a></div>";
    };

    hotImgFormatter = function (cellValue, options, rowObject) {
        if (cellValue === "HOT") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/hot.png")\" /><span class='value' style='display: none;'>" + cellValue + "</span></div>";
        }
        else if (cellValue === "HC") {
            return "<div class='center'><span style='color: White; background-color: Red; font-weight: bold;'>HC</span><span class='value' style='display: none;'>" + cellValue + "</span></div>";
        }
        else if (cellValue) {
            return "<div class='center'><span>" + cellValue + "<span><span class='value' style='display: none;'>" + cellValue + "</span></div>";
        }
        else {
            return "";
        }
    };

    lotStatusFormatter = function (cellValue, options, rowObject) {
        if (cellValue === "DOWN") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/down.png")\" /></div>";
        }
        else if (cellValue === "HOLD DISP") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/check.png")\" /></div>";
        }
        else if (cellValue === "HOLD") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/hold.png")\" /></div>";
        }
        else if (cellValue === "INVENTORY") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/info_g.png")\" /></div>";
        }
        else if (cellValue === "COMP") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/comp.gif")\" /></div>";
        }
        else if (cellValue === "TBD") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/help.png")\" /></div>";
        }
        else if (cellValue === "OFF-FLOW") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/warning.png")\" /></div>";
        }
        else if (cellValue === "TERMINATED") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/remove.png")\" /></div>";
        }
        else if (cellValue === "RUN") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/run.png")\" /></div>";
        }
        else if (cellValue === "QUEUE") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/wait.png")\" /></div>";
        }
        else if (cellValue === "NEW") {
            return "<div class='center'><img width='16' height='16' src=\"@Url.Content("../images/new.png")\" /></div>";
        }
        else if (cellValue) {
            return "<div class='center'>" + cellValue + "</div>";
        }
        else {
            return "";
        }
    };

    var utils = new SwrOctaneUtils('@Url.Content("~")');

    getDistinctColumnValues("Hot", function () {
        getDistinctColumnValues("LotStatus", function () {
            $("#list").jqGrid({
                url: utils.getAction("OctaneMaster/GetAll/"),
                datatype: "json",
                mtype: "GET",
                autowidth: true,
                shrinkToFit: true,
                forceClientSorting: false,
                loadonce: false,
                iconSet: "fontAwesome",
                jsonReader: {
                    repeatitems: false,
                    root: function (response) { return response.SwrList; },
                    page: function (response) { return response.CurrentPage; },
                    total: function (response) { return response.TotalPages; },
                    records: function (response) { return response.ItemCount; }
                },
                colNames: ["SWR",
                    "SWR Type",
                    "Is R&D",
                    "Flow Type",
                    "Originator",
                    "SWR Status",
                    "Hot",
                    "Product",
                    "Lot",
                    "Lot Type",
                    "Qty",
                    "Lot Status",
                    "Flow Viewer",
                    "Hrs at Oper",
                    "Current Operation",
                    "%"],
                colModel: [
                    { name: "SwrId", width: 25, formatter: swrIdLinkFormatter },
                    { name: "SwrProdType", width: 27 },
                    { name: "IsRndSwr", width: 20 },
                    { name: "FlowType", width: 30 },
                    { name: "Owner", width: 35 },
                    { name: "SwrStatus", width: 30 },
                    { name: "Hot", width: 18, formatter: hotImgFormatter },
                    { name: "Product", width: 35 },
                    { name: "Lot", width: 45 },
                    { name: "LotType", width: 20 },
                    { name: "Qty", width: 15 },
                    { name: "LotStatus", width: 30, formatter: lotStatusFormatter },
                    { name: "FlowViewerRouteLink", width: 20, formatter: routeLinkFormatter, sortable: false, search: false },
                    { name: "HrsAtOp", width: 35 },
                    { name: "CurrentOper", width: 45 },
                    { name: "PctStr", width: 15 },
                ],
                rowNum: 15,
                loadui: "block",
                multiselect: false,
                multiPageSelection: true,
                //multipleSelectSeparator: ";",
                inFilterSeparator: ";",
                loadComplete: function () {

                    setSearchSelect('Hot');
                    setSearchSelect('LotStatus');

                    jQuery("#list").jqGrid("filterToolbar", {
                        stringResult: true,
                        searchOnEnter: true,
                        defaultSearch: 'eq',
                        beforeClear: function () {
                            $(this.grid.hDiv).find(".ui-search-toolbar .ui-search-input>select[multiple] option").each(function () {
                                this.selected = false; // unselect all options
                            });

                            $(this.grid.hDiv).find(".ui-search-toolbar button.ui-multiselect").each(function () {
                                $(this).prev("select[multiple]").multiselect("refresh");
                            }).css({
                                width: "98%",
                                marginTop: "1px",
                                marginBottom: "1px",
                                paddingTop: "3px"
                            });
                        }
                    });
                    jQuery("#list").jqGrid('setGridHeight', 400);
                },
                rowList: [15, 30, 50, 100],
                pager: true,
                pagerRightWidth: 135, // fix wrapping or right part of the pager
                viewrecords: true,
                sortable: true,
                sortname: "SwrId",
                sortorder: "desc"
            }).jqGrid("navGrid", { edit: false, add: false, del: false, search: false });
        });
    });

</script>
