@model Tqt.Mes.Models.SwrOctane.SwrOctaneBuilderModel
@using Newtonsoft.Json

@{
    ViewBag.Title = "Build SWR";
    ViewBag.UseModernJquery = true;
    ViewBag.UseModernBootstrap = true;
    ViewBag.UseToastr = true;
    ViewBag.UseKnockoutJs = true;
}

@section headscripts {
    @System.Web.Optimization.Scripts.Render("~/bundles/swr-octane-builder/js")
}

<style>

    .full-width {
        width: 100%;
    }

    .text-right {
        text-align: right;
    }

    .move-arrows {
        width: 75px;
        text-align: center;
    }

        .move-arrows a {
            text-decoration: none;
        }

            .move-arrows a:hover {
                text-decoration: none;
                color: rgba(0, 0, 255, 1.0)
            }

    .text-center {
        text-align: center;
    }

    .route-link, .oper-link {
        text-decoration: none;
        color: #d32525;
    }


    .oper-row:hover, .route-row:hover {
        background: #ddd;
    }

    .oper-row, .route-row {
        background: #fff;
    }

        .oper-row.last-moved-row, .route-row.last-moved-row {
            background: rgba(0, 0, 255, 0.2);
        }

            .oper-row.last-moved-row.fade-out, .route-row.last-moved-row.fade-out {
                background: rgba(255, 255, 255, 1);
                transition: background-color 2.5s ease;
            }

                .oper-row.selected, .route-row.selected,
                .oper-row.last-moved-row.selected, .route-row.last-moved-row.selected,
                .oper-row.last-moved-row.fade-out.selected, .route-row.last-moved-row.fade-out.selected {
                    background: #ff0;
                }

    .main-button {
        margin-right: 8px;
        width: 150px;
    }

    .main-button-right-edge {
        margin-right: 32px;
        width: 150px;
    }

    .delete, .delete a {
        color: #d32525;
        text-align: center;
    }

        .delete:hover, .delete a:hover {
            color: red;
        }


    .customTable {
        table-layout: fixed;
        border-spacing: 2px;
    } 
    .customTableTh{
        font: bold 11px "Trebuchet MS", Verdana, Arial, Helvetica,sans-serif;
        color: #6D929B;
        border-right: 1px solid #C1DAD7;
        border-bottom: 1px solid #C1DAD7;
        border-top: 1px solid #C1DAD7;
        letter-spacing: 2px;
        text-transform: uppercase;
        text-align: center;
        padding: 3px 3px 3px 3px;
        background-color: #DDD;
        white-space:nowrap;
    }
	
    .customTableTd {
        border-right: 1px solid #C1DAD7;
        border-bottom: 1px solid #C1DAD7;
        padding: 3px 3px 3px 3px;
        font-size:x-small;
        width: 1px;
        white-space:nowrap;
    }

    input[type=text].customTableTextBox {
        width: 100px;
    }

</style>

<script type="text/javascript">
    function preventDefault(e) {
        e.preventDefault();
    }
</script>

<div id="force-save-changes-dialog" style="display: none;" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Save Changes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    You have unsaved changes. You must save changes to continue. would you like to save?
                </p>
                <input type="hidden" id="leave-page-navigate-to-url" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bind="click: function()  {saveChanges(true)}">Save Changes</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="javascript:preventDefault(event)">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="leave-page-dialog" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Unsaved changes</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>
                    You have unsaved changes. Are you sure you want to leave the page? Your changes will be lost if you leave.
                </p>
                <input type="hidden" id="leave-page-navigate-to-url" />
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bind="click:navigateAway">Discard Changes and Leave</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="javascript:preventDefault(event)">Stay Here</button>
            </div>
        </div>
    </div>
</div>

<div id="add-route-dialog" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add new Route</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-2 text-right">
                        Choose Action:
                    </div>
                    <div class="col-sm-10">
                        <input type="radio" name="CopyCreate" value="Copy" data-bind="checked: addRouteCopyCreate" />&nbsp; Copy Existing &nbsp;&nbsp;
                        <input type="radio" name="CopyCreate" value="CreateNew" data-bind="checked: addRouteCopyCreate" />&nbsp; Create New &nbsp;&nbsp;
                    </div>
                </div>

                <div class="row" data-bind="visible: addRouteCopyCreate() === 'Copy'" >
                    <div class="col-sm-2 text-right">
                        Copy From:
                    </div>
                    <div class="col-sm-10">
                        <input type="radio" name="SwrReleasedEngr" value="SWR" data-bind="checked: addRouteSwrReleasedEngr" />&nbsp; SWR &nbsp;&nbsp;
                        <input type="radio" name="SwrReleasedEngr" value="Released" data-bind="checked: addRouteSwrReleasedEngr" />&nbsp; Released &nbsp;&nbsp;
                        <input type="radio" name="SwrReleasedEngr" value="Engr" data-bind="checked: addRouteSwrReleasedEngr" />&nbsp; Engineering &nbsp;&nbsp;
                    </div>
                </div>

                <div class="row mt-1" data-bind="visible: addRouteCopyCreate() === 'Copy' && (addRouteSwrReleasedEngr() && addRouteSwrReleasedEngr() === 'SWR' )  ">
                    <div class="col-sm-2 text-right"></div>
                    <div class="col-sm-10">
                        <input type="radio" name="SwrSingleMultiple" value="Single" data-bind="checked: addRouteSingleMultiple" />&nbsp; Single &nbsp;&nbsp;
                        <input type="radio" name="SwrSingleMultiple" value="Multiple" data-bind="checked: addRouteSingleMultiple" />&nbsp; Multiple &nbsp;&nbsp;
                    </div>
                </div>
                
                <div class="row mt-1" data-bind="visible: addRouteCopyCreate() === 'Copy' && (addRouteSwrReleasedEngr() && addRouteSwrReleasedEngr() === 'SWR' ) && (addRouteSingleMultiple() === 'Single' || addRouteSingleMultiple() === 'Multiple') ">
                    <div class="col-sm-2 text-right"></div>
                    <div class="col-sm-10">
                        <select id="add-route-choose-from-ddl"
                                data-bind="options: swrOriginatorList, value: selectedOriginator, optionsValue: 'OriginatorUid', optionsText: 'OriginatorName', optionsCaption: 'Choose...'"></select>
                        <br />

                        <select id="add-route-choose-swr-ddl"
                                data-bind="options: allSwrList, value: selectedSwrId, optionsValue: 'SwrId', optionsText: 'SwrId', optionsCaption: 'Choose...'"></select>
                    </div>
                </div>
                
                <div class="row mt-1" data-bind="visible: addRouteCopyCreate() === 'Copy' && (addRouteSwrReleasedEngr() && addRouteSwrReleasedEngr() === 'SWR' ) && (addRouteSingleMultiple() === 'Single') ">
                    <div class="col-sm-2 text-right"></div>
                    <div class="col-sm-10">

                        <select id="add-route-choose-route-ddl"
                                data-bind="options: addRoutSwrRouteList, value: addRouteSwrSelectedRoute, optionsValue: 'Route', optionsText: 'Route', optionsCaption: 'Choose...'">
                        </select>

                    </div>
                </div>
                
                <div class="row mt-1" data-bind="visible: addRouteCopyCreate() === 'Copy' && (addRouteSwrReleasedEngr() && addRouteSwrReleasedEngr() === 'SWR' ) && (addRouteSingleMultiple() === 'Multiple') ">
                    <div class="col-sm-2 text-right"></div>
                    <div class="col-sm-10">

                        <select multiple style="width: 150px;" size=7 id="add-route-choose-route--multi-ddl"
                                data-bind="options: addRoutSwrRouteList, selectedOptions: addRouteSwrMultipleSelectedRoute, optionsValue: 'Route', optionsText: 'Route'">
                        </select>
                        
                        <br/>
                        <input type="checkbox" data-bind="checked: addRouteSwrMultipleSelectAllRoutes" /> Select All Routes

                    </div>
                </div>
                
                <div class="row mt-1" data-bind="visible: addRouteCopyCreate() === 'Copy' && (addRouteSwrReleasedEngr() && addRouteSwrReleasedEngr() === 'Released' )  ">
                    <div class="col-sm-2 text-right"></div>
                    <div class="col-sm-10">
                        <select id="add-route-choose-facility1" 
                                data-bind="options: addRouteReleasedFacilityList, value: addRouteReleasedSelectedFacility, optionsCaption: 'Choose...'">
                        </select>
                        
                        <br/>

                        <select id="add-route-choose-drs-route" 
                                data-bind="options: addRouteReleasedRouteList, value: addRouteReleasedSelectedRoute, optionsValue: 'Route', optionsText: 'Route', optionsCaption: 'Choose...'">
                        </select>
                    </div>
                </div>
                
                <div class="row mt-1" data-bind="visible: addRouteCopyCreate() === 'Copy' && (addRouteSwrReleasedEngr() && addRouteSwrReleasedEngr() === 'Engr' )  ">
                    <div class="col-sm-2 text-right"></div>
                    <div class="col-sm-10">
                        <select id="add-route-choose-facility2" 
                                data-bind="options: addRouteEngrFacilityList, value: addRouteEngrSelectedFacility, optionsCaption: 'Choose...'">
                        </select>
                        
                        <br/>
                        
                        <select id="add-route-choose-eng-route" 
                                data-bind="options: addRouteEngrRouteList, value: addRouteEngrSelectedRoute, optionsValue: 'Route', optionsText: 'Route', optionsCaption: 'Choose...'">
                        </select>

                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Route Name:
                    </div>
                    <div class="col-sm-10">
                        <input type="text" style="width: 350px;" data-bind="value: addRouteRouteName" /> <br />
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Description:
                    </div>
                    <div class="col-sm-10">
                        <input type="text" style="width: 350px;" data-bind="value: addRouteRouteDescription" /> <br />
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Purpose:
                    </div>
                    <div class="col-sm-10">
                        <textarea rows="10" cols="50" data-bind="value: addRouteRoutePurpose"></textarea>  <br />
                    </div>
                </div>
                
                <div class="row">
                    <div class="col-sm-2 text-right">
                        Insert Point:
                    </div>
                    <div class="col-sm-10">
                        <select id="add-route-insert-after" 
                                data-bind="options: routesList, value: selectedInsertPoint">
                        </select>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bind="click: AddNewRoute">Add</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="javascript:preventDefault(event)">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="add-operation-dialog" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Add new Operation</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-sm-2 text-right">
                        Product Type:
                    </div>
                    <div class="col-sm-10">
                        <select data-bind="options: addOperProductTypeList, value: addOperSelectedProductType, optionsCaption: 'Choose...'"></select>
                    </div>
                </div>

                <div class="row mt-1" data-bind="visible: addOperSelectedProductType() === 'BAW'">
                    <div class="col-sm-2 text-right">
                        Process Type:
                    </div>
                    <div class="col-sm-10">
                        <select data-bind="options: addOperProcessTypeList, value: addOperSelectedProcessType, optionsCaption: 'Choose...'"></select>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Operation:
                    </div>
                    <div class="col-sm-10">
                        <select data-bind="options: addOperOperationList, value: addOperSelectedOperation, optionsText: function(item) { return item.OperDesc }, optionsCaption: 'Choose...'"></select>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Description:
                    </div>
                    <div class="col-sm-10">
                        <span data-bind="text: addOperDescription"></span>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Insert Point:
                    </div>
                    <div class="col-sm-10">
                        <select id="add-oper-insert-after" data-bind="options: addOperOperationInsertPointList, value: addOperSelectedInsertPoint"></select>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        MVIN Ins:
                    </div>
                    <div class="col-sm-10">
                        <input type="checkbox" data-bind="checked: addOperMvinHold" disabled="disabled" /> Hold
                        &nbsp;&nbsp;<input type="checkbox" data-bind="checked: addOperMvinSplit" /> Manual Split
                        &nbsp;&nbsp;<input type="checkbox" data-bind="checked: addOperMvinMerge" /> Manual Merge
                        <div class="row mt-1">
                            <div class="col-sm-12">
                                <textarea rows="3" cols="50" data-bind="value: addOperMvinIns"></textarea>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        MVOUT Ins:
                    </div>
                    <div class="col-sm-10">
                        <input type="checkbox" data-bind="checked: addOperMvoutHold" /> Hold
                        &nbsp;&nbsp;<input type="checkbox" data-bind="checked: addOperMvoutSplit" /> Manual Split
                        &nbsp;&nbsp;<input type="checkbox" data-bind="checked: addOperMvoutMerge" /> Manual Merge
                        <div class="row mt-1">
                            <div class="col-sm-12">
                                <textarea rows="3" cols="50" data-bind="value: addOperMvoutIns"></textarea>
                            </div>
                        </div>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Spec Id:
                    </div>
                    <div class="col-sm-10">
                        <input data-bind="value: addOperSpecIdTextValue" />&nbsp;&nbsp;&nbsp;&nbsp;
                        <select data-bind="options: addOperSpecIdList, value: addOperSelectedSpecId, optionsText: 'SpecId', optionsValue: 'SpecId', optionsCaption: 'Choose...'"></select>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                        Tools:
                    </div>
                    <div class="col-sm-10">
                        <input type="checkbox" id="addOper-select-all-tools" data-bind="checked: addOperSelectAllTools" /> <label for="addOper-select-all-tools">Select All Tools</label>
                        &nbsp;&nbsp;<input type="checkbox" id="addOper-select-allowed-tools" data-bind="checked: addOperSelectAllowedTools" /> <label for="addOper-select-allowed-tools">Select Allowed Tools</label>
                    </div>
                </div>

                <div class="row mt-1">
                    <div class="col-sm-2 text-right">
                    </div>
                    <div class="col-sm-10" data-bind="foreach: addOperAllTools">
                        &nbsp;&nbsp;
                        <input type="checkbox" data-bind="attr: { id: ToolId }, checkedValue: ToolId, checked: $parent.addOperSelectedTools" />
                        <label data-bind="attr: { for: ToolId }, text: ToolId"></label>
                    </div>
                </div>

            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bind="click: AddNewOper">Add</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="javascript:preventDefault(event)">Cancel</button>
            </div>
        </div>
    </div>
</div>

<div id="edit-oper-dialog" class="modal" tabindex="-1" role="dialog">
<div class="modal-dialog modal-xl" role="document">
<div class="modal-content">
<div class="modal-header">
    <h5 class="modal-title">Edit route:
        <span class="route" data-bind="text: edit.route"></span>
        , oper: <span class="oper-num" data-bind="text: edit.operNum">
        </span> <span class="oper-desc" data-bind="text: edit.shortDesc"></span>
        (type: <span class="oper-type" data-bind="text: edit.operType"></span>)
    </h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>
<div class="modal-body" style="overflow-x: auto;">
<div class="row">
    <div class="col-sm-2 text-right">
        MVIN Instructions:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <input type="checkbox" id="mvin-hold" data-bind="checked: edit.oper().mvinHold" disabled="disabled" /> <label for="mvin-hold">Hold</label>
                &nbsp;&nbsp;<input type="checkbox" id="mvin-split" data-bind="checked: edit.oper().mvinSplit" /> <label for="mvin-split">Manual Split</label>
                &nbsp;&nbsp;<input type="checkbox" id="mvin-merge" data-bind="checked: edit.oper().mvinMerge" /> <label for="mvin-merge">Manual Merge</label>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <textarea id="mvin-instructions" rows="3" cols="80" data-bind="value: edit.oper().mvinInsNoHtml"></textarea>
            </div>
        </div>
    </div>
</div>
<br />
<div class="row">
    <div class="col-sm-2 text-right">
        MVOUT Instructions:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <input type="checkbox" id="mvout-hold" data-bind="checked: edit.oper().mvoutHold" /> <label for="mvout-hold">Hold</label>
                &nbsp;&nbsp;<input type="checkbox" id="mvout-split" data-bind="checked: edit.oper().mvoutSplit" /> <label for="mvout-split">Manual Split</label>
                &nbsp;&nbsp;<input type="checkbox" id="mvout-merge" data-bind="checked: edit.oper().mvoutMerge" /> <label for="mvout-merge">Manual Merge</label>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <textarea id="mvout-instructions" rows="3" cols="80" data-bind="value: edit.oper().mvoutInsNoHtml"></textarea>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-2 text-right">
        Tools:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <select id="tool-sets"
                        data-bind="options: edit.oper().distinctToolSets, value: edit.oper().selectedToolSet"></select>
                &nbsp;&nbsp;<input type="checkbox" id="select-all-tools-checkbox" data-bind="checked: edit.oper().selectAllTools" /> <label for="select-all-tools-checkbox">Select All Tools</label>
                &nbsp;&nbsp;<input type="checkbox" id="select-allowed-tools-checkbox" data-bind="checked: edit.oper().selectAllowedTools" /> <label for="select-allowed-tools-checkbox">Select Allowed Tools</label>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12" id="tool-checkboxes" data-bind="foreach: edit.oper().allTools">
                &nbsp;&nbsp;
                <input type="checkbox" data-bind="attr: { id: ToolId() }, checked: $parent.edit.oper().selectedTools().includes(ToolId()), click: $parent.edit.chooseTool(ToolId(), $element.checked)" />
                <label data-bind="attr: { for: ToolId() }, text: ToolId"></label>
            </div>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-sm-2 text-right">
        Spec:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <select id="specs-list"
                        data-bind="options: edit.oper().specs, value: edit.selectedSpecId, optionsValue: 'SpecId', optionsText: 'SpecId'">
                </select>
            </div>
        </div>
    </div>
</div>
<div class="row mt-1">
    <div class="col-sm-2 text-right">
        Split Group:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <select id="split-groups-list"
                        data-bind="options: edit.oper().waferSetGroups, value: edit.selectedWaferSetId, optionsValue: 'SetId', optionsText: 'SetLabel'"></select>
            </div>
        </div>
        <br/>

        <div class="row" data-bind="visible: edit.operType() === 'SPLIT'">
            <div class="col-sm-12" id="split-wafer-list" data-bind="visible: edit.selectedWaferSetId()">
                <table class="customTable">
                    <thead>
                    <tr>
                        <th class="customTableTh">Product</th>
                        <th class="customTableTh">Wafer Group</th>
                        <th class="customTableTh">Wafers</th>
                        <th class="customTableTh">Action</th>
                        <th class="customTableTh">Relation</th>
                        <th class="customTableTh">Hold</th>
                        <th class="customTableTh">SWR</th>
                    </tr>
                    </thead>
                    <tbody data-bind="foreach: edit.selectedWaferSetGroups">
                    <tr>
                        <td class="customTableTd" data-bind="text: Product"></td>
                        <td class="customTableTd" data-bind="text: WaferGroupLabel"></td>
                        <td class="customTableTd" data-bind="text: WaferIds"></td>
                        <td class="customTableTd" >SPLIT</td>
                        <td class="customTableTd">
                            <select data-bind="attr: { id: 'split-relation_' + $parent.edit.selectedWaferSetId().toString() + '_' + WaferGroupId().toString() }, value: selectedRelation">
                                <option value=""></option>
                                <option value="CHILD">CHILD</option>
                                <option value="PARENT">PARENT</option>
                            </select>
                        </td>
                        <td class="customTableTd"><input type="checkbox" data-bind="checked: HoldLot() === 'Y'" /></td>
                        <td class="customTableTd"><input type="text" style="width: 75px;" data-bind="value: NewSwrId" /></td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>

        <div class="row" data-bind="visible: edit.operType() === 'MERGE'">
            <div class="col-sm-12" id="merge-wafer-list" data-bind="visible: edit.selectedWaferSetId()">
                <table class="customTable">
                    <thead>
                    <tr>
                        <th class="customTableTh">Product</th>
                        <th class="customTableTh">Wafer Group</th>
                        <th class="customTableTh">Wafers</th>
                        <th class="customTableTh">Action</th>
                        <th class="customTableTh">Hold</th>
                    </tr>
                    </thead>
                    <tbody data-bind="foreach: edit.selectedWaferSetGroups">
                    <tr>
                        <td class="customTableTd" data-bind="text: Product"></td>
                        <td class="customTableTd" data-bind="text: WaferGroupLabel"></td>
                        <td class="customTableTd" data-bind="text: WaferIds"></td>
                        <td class="customTableTd">
                            <select data-bind="attr: { id: 'merge-relation_' + $parent.edit.selectedWaferSetId().toString() + '_' + WaferGroupId().toString() }, value: selectedAction">
                                <option value=""></option>
                                <option value="NO_PROCESS">NO_PROCESS</option>
                                <option value="MERGE">MERGE</option>
                            </select>
                        </td>
                        <td class="customTableTd"><input type="checkbox" data-bind="checked: HoldLot() === 'Y'" /></td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>

    </div>
</div>
<div class="row mt-1" data-bind="visible: (edit.operType() !== 'SPLIT' && edit.operType() !== 'MERGE')">
    <div class="col-sm-2 text-right">
        Products:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <select id="products-list"
                        data-bind="options: edit.products(), value: edit.oper().selectedProduct"></select>
            </div>
        </div>
    </div>
</div>
<div class="row mt-1" data-bind="visible: (edit.operType() !== 'SPLIT' && edit.operType() !== 'MERGE')">
    <div class="col-sm-2 text-right">
        Wafer Group Recipes:
    </div>
    <div class="col-sm-10">
        <div class="row" data-bind="visible: !edit.selectedWaferSetId() || edit.selectedWaferSetId() === -1">
            <div class="col-sm-12">
                <select id="recipes-list"
                        data-bind="options: edit.oper().recipes, value: edit.oper().selectedRecipe"></select>
            </div>
        </div>
        <div class="row" data-bind="visible: edit.selectedWaferSetId() && edit.selectedWaferSetId() !== -1">
            <div class="col-sm-12" id="recipes-list-per-group" data-bind="visible: edit.selectedWaferSetId()">
                <table class="customTable">
                    <thead>
                    <tr>
                        <th class="customTableTh">Wafer Group</th>
                        <th class="customTableTh">Wafers</th>
                        <th class="customTableTh">Recipes</th>
                    </tr>
                    </thead>
                    <tbody data-bind="foreach: edit.selectedWaferSetGroups">
                    <tr>
                        <td class="customTableTd" data-bind="text: WaferGroupLabel"></td>
                        <td class="customTableTd" data-bind="text: WaferIds"></td>
                        <td class="customTableTd">
                            <select data-bind="attr: { id: 'recipe_' + $parent.edit.selectedWaferSetId().toString() + '_' + WaferGroupId().toString() }, value: selectedRecipe, options: $parent.edit.oper().recipes"></select>
                        </td>
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
<div class="row mt-1" data-bind="visible: (edit.operType() !== 'SPLIT' && edit.operType() !== 'MERGE')">
    <div class="col-sm-2 text-right">
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <button class="btn btn-sm btn-outline-primary" data-bind="click: function() { edit.addRecipes() }">Add Recipe(s)</button>
                <button class="btn btn-sm btn-outline-primary" data-bind="click: function () { edit.deleteRecipes() }">Delete Recipes</button>
            </div>
        </div>
    </div>
</div>
<div class="row mt-1" data-bind="visible: (edit.operType() !== 'SPLIT' && edit.operType() !== 'MERGE')">
    <div class="col-sm-2 text-right">
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <input type="checkbox" data-bind="checked: edit.oper().lotLevelDrrm"/> &nbsp;&nbsp; Disable Runtime Recipe Modification (DRRM)
                <table class="customTable">
                    <thead>
                    <tr>
                        <th class="customTableTh">Del</th>
                        <th class="customTableTh">Params</th>
                        <th class="customTableTh">Product</th>
                        <th class="customTableTh" data-bind="visible: edit.oper().recipeInfoData().length > 0 && edit.oper().recipeInfoData()[0].WaferGroupLabel" >Wafer Group</th>
                        <th class="customTableTh" data-bind="visible: edit.oper().recipeInfoData().length > 0 && edit.oper().recipeInfoData()[0].WaferIds">Wafers</th>
                        <th class="customTableTh">Recipe</th>
                        <th class="customTableTh">Tool</th>
                        <th class="customTableTh">Tool Set</th>
                        <th class="customTableTh">Event Name</th>
                        <th class="customTableTh">DRRM</th>
                        <!-- ko foreach: extendedRecipeColumnNames -->
                        <th class="customTableTh" data-bind="text: name"></th>
                        <!-- /ko -->
                    </tr>
                    </thead>
                    <tbody data-bind="foreach: edit.oper().recipeInfoData">
                    <tr>
                        <td class="customTableTd delete">
                            <a href="#" data-bind="click: function() {$parent.edit.oper().deleteRecipeInfoData($data)}"><i class="fa fa-trash-o"></i></a>
                        </td>
                        <td class="customTableTd"><a data-bind="attr: { href: Plink, target: '_blank' }">Link</a></td>
                        <td class="customTableTd" data-bind="text: Product"></td>
                        <td class="customTableTd" data-bind="text: WaferGroupLabel, visible: $root.edit.oper().recipeInfoData().length > 0 && $root.edit.oper().recipeInfoData()[0].WaferGroupLabel"></td>
                        <td class="customTableTd" data-bind="text: WaferIds, visible: $root.edit.oper().recipeInfoData().length > 0 && $root.edit.oper().recipeInfoData()[0].WaferIds"></td>
                        <td class="customTableTd" data-bind="text: Recipe"></td>
                        <td class="customTableTd" data-bind="text: ToolId"></td>
                        <td class="customTableTd" data-bind="text: ToolSet"></td>
                        <td class="customTableTd" data-bind="text: EventName"></td>
                        <td class="customTableTd">
                            <input type="checkbox" data-bind="checked: Drrm" />
                        </td>
                        <!-- ko foreach: RecipeParameters -->
                        <td class="customTableTd">
                            <input class="customTableTextBox" type="text" data-bind="value: ParameterValue, attr:{ readonly: $root.isReadOnly}" />
                        </td>
                        <!-- /ko -->
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>
            
<div class="row" data-bind="visible: edit.oper().probeSetup().length > 0">
    <div class="col-sm-2 text-right">
        Probe Setup(s):
    </div>
    <div class="col-sm-10">
        <div data-bind="foreach: edit.oper().probeSetupLots">
            <a data-bind="attr: {href:'http://dfw0mfg11/RecipeManagerStaging/createWafBaw.aspx?eventname=' + EventName + '&lot=' + Lot.LotNumber}"
               target='_blank'><span data-bind="text: Lot.LotNumber"></span></a>&nbsp;&nbsp;
        </div>
        <div>
            <table class="customTable">
                <thead>
                <tr>
                    <th class="customTableTh">Product</th>
                    <th class="customTableTh">Event Name</th>
                    <th class="customTableTh">Device File</th>
                    <th class="customTableTh">Setup</th>
                    <th class="customTableTh">Setup Folder</th>
                    <th class="customTableTh">Test Type</th>
                    <th class="customTableTh">Wafer Map</th>
                </tr>
                </thead>
                <tbody data-bind="foreach: edit.oper().probeSetup">
                <tr>
                    <td class="customTableTd">
                        <input type="text" data-bind="value: Product, attr:{ readonly: $root.isReadOnly}"/>
                    </td>
                    <td class="customTableTd">
                        <input type="text" data-bind="value: EventName, attr:{ readonly: $root.isReadOnly}" />
                    </td>
                    <td class="customTableTd">
                        <input type="text" data-bind="value: DeviceFile, attr:{ readonly: $root.isReadOnly}" />
                    </td>
                    <td class="customTableTd">
                        <input type="text" data-bind="value: Setup, attr:{ readonly: $root.isReadOnly}" />
                    </td>
                    <td class="customTableTd">
                        <input type="text" data-bind="value: SetupFolder, attr:{ readonly: $root.isReadOnly}" />
                    </td>
                    <td class="customTableTd">
                        <input type="text" data-bind="value: TestType, attr:{ readonly: $root.isReadOnly}" />
                    </td>
                    <td class="customTableTd">
                        <input type="text" data-bind="value: WaferMap, attr:{ readonly: $root.isReadOnly}" />
                    </td>
                </tr>

            </table>
        </div>
    </div>
</div>

<div class="row mt-1">
    <div class="col-sm-2 text-right">
        Image/Other Documentation:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <input type="file" id="image-or-documentation" style="width: 500px;" data-bind="event: { change: function() { edit.uploadDocumentation($element.files[0]) } }" />
            </div>
        </div>
    </div>
</div>
            
<div class="row mt-1" data-bind="visible: edit.oper().fileName().length > 0">
    <div class="col-sm-2 text-right"></div>
    <div class="col-sm-10">
        <a href="#" data-bind="click: displayfile"><span data-bind="text: edit.oper().fileName()"></span></a>
    </div>
</div>
            
<div class="row mt-1">
    <div class="col-sm-2 text-right">
        ETS Future Hold?
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <input type="radio" name="ets-future-hold" value="0" data-bind="checked: edit.oper().etsFutureHold" /> No
                <input type="radio" name="ets-future-hold" value="1" data-bind="checked: edit.oper().etsFutureHold" /> Yes
            </div>
        </div>
    </div>
</div>
            
<div class="row mt-1" data-bind="visible: edit.oper().etsFutureHold() === '1'">
    <div class="col-sm-2 text-right">
        ETS Hold Note:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <input type="text" style="width: 500px;" data-bind="value: edit.oper().futureHoldNote" />
            </div>
        </div>
    </div>
</div>
            
<div class="row mt-1" data-bind="visible: edit.oper().etsFutureHold() === '1'">
    <div class="col-sm-2 text-right">
        Hold Category:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <select id="future-hold-categories"
                        data-bind="options: edit.futureHoldCategoryData, value: edit.oper().futureHoldCategory, optionsValue: 'Value', optionsText: 'Text'"></select>
            </div>
        </div>
    </div>
</div>

<div class="row mt-1" data-bind="visible: edit.oper().etsFutureHold() === '1'">
    <div class="col-sm-2 text-right">
        Hold Owner:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <select id="future-hold-owners"
                        data-bind="options: edit.futureHoldOwners, value: edit.oper().futureHoldOwner, optionsValue: 'UserName', optionsText: 'FullName'"></select>
            </div>
        </div>
    </div>
</div>

<div class="row mt-1" data-bind="visible: edit.oper().etsFutureHold() === '1'">
    <div class="col-sm-2 text-right">
        ETS Details:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <textarea rows="6" cols="120" data-bind="value: edit.oper().futureHoldDetails"></textarea>
            </div>
        </div>
    </div>
</div>
            
<div class="row mt-1" data-bind="visible: edit.oper().displayEdcOptions">
    <div class="col-sm-2 text-right">
        EDC Options:
    </div>
    <div class="col-sm-10">
        <div class="row">
            <div class="col-sm-12">
                <input type="radio" name="ets-options" value="Standard" data-bind="checked: edit.oper().edcOptionType" /> Standard
                <input type="radio" name="ets-options" value="Ignore" data-bind="checked: edit.oper().edcOptionType" /> Ignore
                <input type="radio" name="ets-options" value="Custom" data-bind="checked: edit.oper().edcOptionType" /> Custom
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12">
                <div data-bind="visible: $root.edit.oper().edcOptionType() === 'Custom'">
                    <div class="row">
                        <div class="col-sm-2 text-right">
                            Split Group:
                        </div>
                        <div class="col-sm-10">
                            <select id="split-groups-list-edcOptionCustom"
                                    data-bind="options: edit.oper().waferSetGroups, value: edit.oper().selectedEdcOptionWaferSetId, optionsValue: 'SetId', optionsText: 'SetLabel'"></select>
                        </div>
                    </div>
                    <div class="row" data-bind="visible: edit.hasMultipleProduct" >
                        <div class="col-sm-2 text-right">
                            Product:
                        </div>
                        <div class="col-sm-3" data-bind="if: edit.hasAllProducts()">
                            <input type="text" data-bind="value: edit.oper().edcOptionProduct" style="width: 100px;" />
                        </div>
                        <div class="col-sm-3" data-bind="if: (!edit.hasAllProducts() && edit.products().length > 0)">
                            <select id="prod-ddl-edcOptionCustom" data-bind="options: edit.products(), value: edit.oper().edcOptionProduct"></select>
                        </div>
                        <div class="col-sm-4">
                            <button class="btn btn-sm btn-outline-primary" data-bind="click: addEdcOptionProduct">Add</button>
                            <button class="btn btn-sm btn-outline-primary" data-bind="click: deleteEdcOptionProduct">Delete</button>
                        </div>
                    </div>
                </div>
                <table class="customTable">
                    <thead>
                    <tr>
                        <th class="customTableTh">Product</th>
                        <th class="customTableTh" data-bind="visible: $root.edcLimitOptionsVisibility" >Group Name</th>
                        <th class="customTableTh" data-bind="visible: $root.edcLimitOptionsVisibility">Wafer Ids</th>
                        <!-- ko foreach: edit.oper().edcLimits()[0]-->
                        <th class="customTableTh" data-bind="text: ParameterName" colspan="2"></th>
                        <!-- /ko -->
                    </tr>
                    <tr>
                        <th class="customTableTh"></th>
                        <th class="customTableTh" data-bind="visible: $root.edcLimitOptionsVisibility" ></th>
                        <th class="customTableTh" data-bind="visible: $root.edcLimitOptionsVisibility"></th>
                        <!-- ko foreach: edit.oper().edcLimits()[0]-->
                        <th class="customTableTh">Min</th>
                        <th class="customTableTh">Max</th>
                        <!-- /ko-->
                    </tr>
                    </thead>
                    <tbody data-bind="foreach: { data: edit.oper().edcLimits, as: 'rowArray' }">
                    <tr>
                        <td class="customTableTd" data-bind="text: rowArray.length > 0 ? rowArray[0].Product : '' "></td>
                        <td class="customTableTd" data-bind="text: rowArray.length > 0 ? rowArray[0].WaferGroupLabel : '', visible: $root.edcLimitOptionsVisibility "></td>
                        <td class="customTableTd" data-bind="text: rowArray.length > 0 ? rowArray[0].WaferIds : '' , visible: $root.edcLimitOptionsVisibility"></td>
                        <!-- ko foreach: rowArray-->
                        <td class="customTableTd"><input type="text" style="width: 50px;" data-bind="value: LowerSpecLimit, attr: {readonly: $root.edit.oper().edcOptionType() === 'Custom'? undefined : 'readonly' }" /> </td>
                        <td class="customTableTd"><input type="text" style="width: 50px;" data-bind="value: UpperSpecLimit , attr: {readonly: $root.edit.oper().edcOptionType() === 'Custom'? undefined : 'readonly' }" /> </td>
                        <!-- /ko-->
                    </tr>
                    </tbody>
                </table>
            </div>
        </div>
    </div>
</div>


</div>
<div class="modal-footer">
    <button type="button" class="btn btn-primary" data-dismiss="modal" data-bind="click: edit.persistOper">Save</button>
    <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="javascript:preventDefault(event)">Cancel</button>
</div>
</div>
</div>
</div>

<div id="customize-or-skip-route-dialog" class="modal" tabindex="-1" role="dialog">
    <div class="modal-dialog modal-sm" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Customize Route?</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row mt-1">
                    <div class="col-sm-12">
                        <input type="radio" name="CustomizeOrSkipRoute" value="Y" data-bind="checked: rdoCustomizeOrSkipRoute" />&nbsp; Yes &nbsp;&nbsp;
                        <input type="radio" name="CustomizeOrSkipRoute" value="N" data-bind="checked: rdoCustomizeOrSkipRoute" />&nbsp; No &nbsp;&nbsp;
                        <input type="radio" name="CustomizeOrSkipRoute" value="S" data-bind="checked: rdoCustomizeOrSkipRoute, visible: flowType() === 'PARTIAL'" />&nbsp; <span data-bind="visible: flowType() === 'PARTIAL'"> Skip</span>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary" data-bind="click: CustomizeOrSkipRouteOkBtn">OK</button>
                <button type="button" class="btn btn-secondary" data-dismiss="modal" onclick="javascript:preventDefault(event)">Cancel</button>
            </div>
        </div>
    </div>
</div>

<br />

<div class="row" id="info-box">
    <div class="col-sm-8">
        <table class="full-width">
            <thead>
                <tr>
                    <th>SWR ID</th>
                    <th>Status</th>
                    <th>Purpose</th>
                    <th>Originator</th>
                    <th>Product</th>
                    <th>Lot Type</th>
                    <th>Flow Type</th>
                    <th>Facility</th>
                </tr>
            </thead>
            <tbody>
                <tr>
                    <td>@Model.SwrId</td>
                    <td>@Model.Status</td>
                    <td>@Model.Purpose</td>
                    <td>@Model.Originator</td>
                    <td>@(string.Join(", ", Model.Products))</td>
                    <td>@Model.LotTypes</td>
                    <td>@Model.FlowType</td>
                    <td>@Model.Facility</td>
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-sm-4">
    </div>
</div>

<br />
<br />

<div class="row">
    <div class="col-sm-6">
        @*<button class="undo btn btn-outline-primary" data-bind="click: undo">Undo</button>
        <button class="redo btn btn-outline-primary" data-bind="click: redo">Redo</button>*@
        <button class="btn btn-outline-primary" data-bind="click: function () { ShowAddRouteDialog() }">Add Route</button>
    </div>
    <div class="col-sm-6 text-right">
        <button class="btn btn-outline-primary" data-bind="click: function () { SkipSelectedRoute() }, visible: selectedRoute() && flowType() === 'PARTIAL'">Skip Route</button>
        &nbsp;&nbsp;&nbsp;
        <button class="btn btn-outline-primary" data-bind="click: function () { RevertSelectedRouteToStd()}, enable: selectedRoute() && selectedRoute().custom() === 'Y'">Revert Route to Std</button>
        &nbsp;&nbsp;&nbsp;
        <button class="btn btn-outline-primary" data-bind="click: function () { ShowAddOperDialog() }, enable: selectedRoute() && selectedRoute().custom() === 'Y'">Add Operation</button>
        &nbsp;&nbsp;&nbsp;
        <button class="btn btn-outline-primary" data-bind="click: function () { manageWaferGroups() }">Manage Wafer Groups</button>
    </div>
</div>

<br />

<div class="row" id="body">
    <div class="col-sm-4" id="routes">
        <table class="full-width">
            <thead>
                <tr>
                    <th>Route</th>
                    <th>Seq</th>
                    <th>SWR Ver</th>
                    <th>WIP Ver</th>
                    <th>Custom</th>
                    <th class="text-center">Move</th>
                    @if (Model.IsPending)
                    {
                        <th class="text-center">Delete</th>
                    }
                </tr>
            </thead>
            <tbody id="routes-tbody" data-bind="foreach: activeRoutes ">

                <tr class="route-row" data-bind="css: {selected: $parent.selectedRoute() && $parent.selectedRoute().route() === route(), 'last-moved-row': moved, 'fade-out': fadeOut }">
                    <td><a href="#" class="route-link" data-bind="text: route, click: function () { $parent.selectRoute($data) }"></a></td>
                    <td class="display-sequence" data-bind="text: seq"></td>
                    <td  data-bind="text: ver"></td>
                    <td  data-bind="text: wip"></td>
                    <td  data-bind="text: custom"></td>
                    <td class="move-arrows">
                        <a href="#" class="up" data-bind="click: function () { $parent.moveRouteUp($data) }"><i class="fa fa-arrow-up"></i></a> |
                        <a href="#" class="down" data-bind="click: function () { $parent.moveRouteDown($data) }"><i class="fa fa-arrow-down"></i></a>
                    </td>
                    @if (Model.IsPending)
                    {
                        <td class="delete">
                            <a href="#" data-bind="click: function() {$parent.deleteRoute($data)}" ><i class="fa fa-trash-o"></i></a>
                        </td>
                    }
                </tr>
            </tbody>
        </table>
    </div>
    <div class="col-sm-8" id="opers" data-bind="visible: selectedRoute()">

        <table class="full-width">
            <thead>
                <tr>
                    <th>Oper</th>
                    <th>Description</th>
                    <th>Mvin Ins</th>
                    <th>Mvout Ins</th>
                    <th>Tools</th>
                    <th>Splits</th>
                    <th>Edc</th>
                    <th>Flow Control</th>
                    <th class="text-center">Move</th>
                    <th class="text-center">Delete</th>
                </tr>
            </thead>
            <tbody id="opers-tbody" data-bind="foreach: activeOpers">
                <tr class="oper-row" data-bind="css: {'last-moved-row': moved, 'fade-out': fadeOut }">
                    <td><a href="#" class="oper-link" data-bind="text: oper, click: function () { $parent.selectOper($data, true) }"></a></td>
                    <td data-bind="text: shortDesc"></td>
                    <td data-bind="html: mvinIns"></td>
                    <td data-bind="html: mvoutIns"></td>
                    <td data-bind="text: tools"></td>
                    <td data-bind="text: recipeSplitGroup"></td>
                    <td data-bind="text: edcOptions"></td>
                    <td data-bind="text: flowControl"></td>
                    <td class="move-arrows">
                        <a href="#" class="up" data-bind="click: function () { $parent.moveOperUp($data) }"><i class="fa fa-arrow-up"></i></a> |
                        <a href="#" class="down" data-bind="click: function () { $parent.moveOperDown($data) }"><i class="fa fa-arrow-down"></i></a>
                    </td>
                    <td class="delete">
                        <a href="#" data-bind="click: function() {$parent.deleteOper($data)}"><i class="fa fa-trash-o"></i></a>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</div>

<br />
<br />
<div class="row">
    <div class="col-sm-6">
    </div>
    <div class="col-sm-6 text-right">
        <button class="btn btn-outline-primary main-button" id="submit-btn" data-bind="click: function () { submitIfChanged() }">No changes...</button>
        <button class="btn btn-secondary main-button-right-edge" data-bind="click: function () { cancelClicked() }" title="Cancel and go back to main page.">Cancel</button>
    </div>
</div>

<script type="text/javascript">
    @{
        Model.ReplaceNullsWithEmptyStrings();

        var json = JsonConvert.SerializeObject(Model);
    }
    @Html.Raw("var model = " + json)

    var memento = new Memento({ model: model });

    var viewModel = new BuilderViewModel({
        basePath: '@Url.Content("~")',
        swrId: @Model.SwrId,
        facility: '@Model.Facility',
        prodType: '@Model.ProdType',
        products: model.Products,
        submitBtn: $("#submit-btn"),
        editOpersDialog: $("#edit-oper-dialog"),
        routes: model.Routes,
        swrStatus: model.Status,
        flowType : '@Model.FlowType'
    });

    $(document).ready(function () {
        viewModel.initialize();
    });

</script>
